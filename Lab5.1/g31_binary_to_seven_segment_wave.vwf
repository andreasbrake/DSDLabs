/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 500000.0;
	SIMULATION_TIME = 500000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("bin")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("bin[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bin";
}

SIGNAL("bin[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bin";
}

SIGNAL("bin[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bin";
}

SIGNAL("bin[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bin";
}

SIGNAL("bin[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bin";
}

SIGNAL("bin[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bin";
}

SIGNAL("bin[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bin";
}

SIGNAL("bin[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bin";
}

SIGNAL("bin[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bin";
}

SIGNAL("bin[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bin";
}

SIGNAL("bin[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bin";
}

SIGNAL("bin[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bin";
}

SIGNAL("clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("segments1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("segments1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments1";
}

SIGNAL("segments1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments1";
}

SIGNAL("segments1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments1";
}

SIGNAL("segments1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments1";
}

SIGNAL("segments1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments1";
}

SIGNAL("segments1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments1";
}

SIGNAL("segments1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments1";
}

SIGNAL("segments2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("segments2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments2";
}

SIGNAL("segments2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments2";
}

SIGNAL("segments2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments2";
}

SIGNAL("segments2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments2";
}

SIGNAL("segments2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments2";
}

SIGNAL("segments2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments2";
}

SIGNAL("segments2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments2";
}

SIGNAL("segments3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("segments3[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments3";
}

SIGNAL("segments3[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments3";
}

SIGNAL("segments3[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments3";
}

SIGNAL("segments3[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments3";
}

SIGNAL("segments3[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments3";
}

SIGNAL("segments3[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments3";
}

SIGNAL("segments3[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments3";
}

SIGNAL("segments4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("segments4[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments4";
}

SIGNAL("segments4[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments4";
}

SIGNAL("segments4[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments4";
}

SIGNAL("segments4[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments4";
}

SIGNAL("segments4[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments4";
}

SIGNAL("segments4[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments4";
}

SIGNAL("segments4[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "segments4";
}

TRANSITION_LIST("bin[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 81920.0;
			LEVEL 1 FOR 81920.0;
		}
		LEVEL 0 FOR 8480.0;
	}
}

TRANSITION_LIST("bin[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 40960.0;
			LEVEL 1 FOR 40960.0;
		}
		LEVEL 0 FOR 8480.0;
	}
}

TRANSITION_LIST("bin[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 12;
			LEVEL 0 FOR 20480.0;
			LEVEL 1 FOR 20480.0;
		}
		LEVEL 0 FOR 8480.0;
	}
}

TRANSITION_LIST("bin[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 24;
			LEVEL 0 FOR 10240.0;
			LEVEL 1 FOR 10240.0;
		}
		LEVEL 0 FOR 8480.0;
	}
}

TRANSITION_LIST("bin[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 48;
			LEVEL 0 FOR 5120.0;
			LEVEL 1 FOR 5120.0;
		}
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 3360.0;
	}
}

TRANSITION_LIST("bin[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 97;
			LEVEL 0 FOR 2560.0;
			LEVEL 1 FOR 2560.0;
		}
		LEVEL 0 FOR 2560.0;
		LEVEL 1 FOR 800.0;
	}
}

TRANSITION_LIST("bin[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 195;
			LEVEL 0 FOR 1280.0;
			LEVEL 1 FOR 1280.0;
		}
		LEVEL 0 FOR 800.0;
	}
}

TRANSITION_LIST("bin[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 390;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 640.0;
		}
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 160.0;
	}
}

TRANSITION_LIST("bin[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 781;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
		}
		LEVEL 0 FOR 160.0;
	}
}

TRANSITION_LIST("bin[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1562;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 160.0;
	}
}

TRANSITION_LIST("bin[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 3125;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
	}
}

TRANSITION_LIST("bin[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 6250;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
	}
}

TRANSITION_LIST("clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 12500;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("segments1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 409;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 160.0;
			NODE
			{
				REPEAT = 409;
				LEVEL 1 FOR 80.0;
				LEVEL 0 FOR 200.0;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 80.0;
			}
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 21;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 60.0;
	}
}

TRANSITION_LIST("segments1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 409;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 120.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 120.0;
		}
		NODE
		{
			REPEAT = 409;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 120.0;
		}
		NODE
		{
			REPEAT = 409;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 120.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 120.0;
		}
		NODE
		{
			REPEAT = 20;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 120.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
	}
}

TRANSITION_LIST("segments1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 40.0;
				LEVEL 1 FOR 40.0;
			}
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 120.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
	}
}

TRANSITION_LIST("segments1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 408;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 80.0;
			}
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 120.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
		}
		NODE
		{
			REPEAT = 409;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 120.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 80.0;
			}
		}
		NODE
		{
			REPEAT = 408;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 80.0;
			}
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 120.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
		}
		NODE
		{
			REPEAT = 20;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 120.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 80.0;
			}
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
	}
}

TRANSITION_LIST("segments1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 409;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 360.0;
			}
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 200.0;
		}
		NODE
		{
			REPEAT = 409;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 360.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 20;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 360.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 340.0;
	}
}

TRANSITION_LIST("segments1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 220.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 409;
				LEVEL 1 FOR 80.0;
				LEVEL 0 FOR 320.0;
			}
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 200.0;
		}
		NODE
		{
			REPEAT = 409;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 20;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 180.0;
	}
}

TRANSITION_LIST("segments1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 60.0;
		NODE
		{
			REPEAT = 409;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 240.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 409;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 240.0;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 80.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 40.0;
				LEVEL 0 FOR 80.0;
			}
		}
		NODE
		{
			REPEAT = 20;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 240.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 20.0;
	}
}

TRANSITION_LIST("segments2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 820.0;
		NODE
		{
			REPEAT = 40;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 800.0;
			LEVEL 1 FOR 800.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 640.0;
			NODE
			{
				REPEAT = 40;
				LEVEL 1 FOR 800.0;
				LEVEL 0 FOR 2000.0;
				LEVEL 1 FOR 400.0;
				LEVEL 0 FOR 800.0;
			}
			LEVEL 1 FOR 800.0;
		}
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 640.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 800.0;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 800.0;
		}
		LEVEL 1 FOR 460.0;
	}
}

TRANSITION_LIST("segments2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1620.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 40;
				LEVEL 0 FOR 1200.0;
				LEVEL 1 FOR 400.0;
				LEVEL 0 FOR 1200.0;
				LEVEL 1 FOR 1200.0;
			}
			LEVEL 0 FOR 1200.0;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 1600.0;
		}
		NODE
		{
			REPEAT = 40;
			LEVEL 0 FOR 1200.0;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 1200.0;
			LEVEL 1 FOR 1200.0;
		}
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 1600.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 60.0;
	}
}

TRANSITION_LIST("segments2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 820.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 40;
				LEVEL 0 FOR 400.0;
				LEVEL 1 FOR 1200.0;
				NODE
				{
					REPEAT = 3;
					LEVEL 0 FOR 400.0;
					LEVEL 1 FOR 400.0;
				}
			}
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 1200.0;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 1040.0;
		}
		NODE
		{
			REPEAT = 40;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 1200.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 400.0;
				LEVEL 1 FOR 400.0;
			}
		}
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 1040.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 400.0;
		}
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 400.0;
		}
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 60.0;
	}
}

TRANSITION_LIST("segments2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 820.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 800.0;
				LEVEL 1 FOR 400.0;
			}
			NODE
			{
				REPEAT = 40;
				LEVEL 0 FOR 1200.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 1 FOR 400.0;
					LEVEL 0 FOR 800.0;
				}
				LEVEL 1 FOR 400.0;
			}
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 800.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 800.0;
			LEVEL 1 FOR 400.0;
		}
		NODE
		{
			REPEAT = 40;
			LEVEL 0 FOR 1200.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 400.0;
				LEVEL 0 FOR 800.0;
			}
			LEVEL 1 FOR 400.0;
		}
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 800.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 800.0;
			LEVEL 1 FOR 400.0;
		}
		LEVEL 0 FOR 1200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 800.0;
		}
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 60.0;
	}
}

TRANSITION_LIST("segments2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 420.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 400.0;
			NODE
			{
				REPEAT = 40;
				LEVEL 1 FOR 400.0;
				LEVEL 0 FOR 3600.0;
			}
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 2640.0;
			LEVEL 1 FOR 400.0;
		}
		LEVEL 0 FOR 400.0;
		NODE
		{
			REPEAT = 40;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 3600.0;
		}
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 2640.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 3600.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 3260.0;
	}
}

TRANSITION_LIST("segments2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 420.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1600.0;
			NODE
			{
				REPEAT = 40;
				LEVEL 1 FOR 800.0;
				LEVEL 0 FOR 3200.0;
			}
			LEVEL 1 FOR 800.0;
			LEVEL 0 FOR 1040.0;
			LEVEL 1 FOR 400.0;
		}
		LEVEL 0 FOR 1600.0;
		NODE
		{
			REPEAT = 40;
			LEVEL 1 FOR 800.0;
			LEVEL 0 FOR 3200.0;
		}
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1040.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 1600.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 3200.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 1660.0;
	}
}

TRANSITION_LIST("segments2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 820.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 40;
				LEVEL 0 FOR 800.0;
				LEVEL 1 FOR 400.0;
				LEVEL 0 FOR 2400.0;
				LEVEL 1 FOR 400.0;
			}
			LEVEL 0 FOR 800.0;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 1840.0;
			LEVEL 1 FOR 800.0;
		}
		NODE
		{
			REPEAT = 40;
			LEVEL 0 FOR 800.0;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 2400.0;
			LEVEL 1 FOR 400.0;
		}
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 1840.0;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 2400.0;
		LEVEL 1 FOR 60.0;
	}
}

TRANSITION_LIST("segments3[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 8020.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 20000.0;
				LEVEL 1 FOR 4000.0;
				LEVEL 0 FOR 8000.0;
				LEVEL 1 FOR 8000.0;
			}
			LEVEL 0 FOR 20000.0;
			LEVEL 1 FOR 4000.0;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 11840.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20000.0;
			LEVEL 1 FOR 4000.0;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 8000.0;
		LEVEL 1 FOR 11840.0;
		LEVEL 0 FOR 460.0;
	}
}

TRANSITION_LIST("segments3[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 16020.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 12000.0;
				LEVEL 1 FOR 4000.0;
				LEVEL 0 FOR 12000.0;
				LEVEL 1 FOR 12000.0;
			}
			LEVEL 0 FOR 12000.0;
			LEVEL 1 FOR 4000.0;
			LEVEL 0 FOR 11840.0;
			LEVEL 1 FOR 16000.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 12000.0;
			LEVEL 1 FOR 4000.0;
			LEVEL 0 FOR 12000.0;
			LEVEL 1 FOR 12000.0;
		}
		LEVEL 0 FOR 12000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 11840.0;
		LEVEL 1 FOR 8460.0;
	}
}

TRANSITION_LIST("segments3[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 8020.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4000.0;
				LEVEL 1 FOR 12000.0;
				NODE
				{
					REPEAT = 3;
					LEVEL 0 FOR 4000.0;
					LEVEL 1 FOR 4000.0;
				}
			}
			LEVEL 0 FOR 4000.0;
			LEVEL 1 FOR 12000.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 4000.0;
				LEVEL 1 FOR 4000.0;
			}
			LEVEL 0 FOR 4000.0;
			LEVEL 1 FOR 12000.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 4000.0;
				LEVEL 1 FOR 4000.0;
			}
			LEVEL 0 FOR 3840.0;
			LEVEL 1 FOR 8000.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4000.0;
			LEVEL 1 FOR 12000.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 4000.0;
				LEVEL 1 FOR 4000.0;
			}
		}
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 12000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 4000.0;
			LEVEL 1 FOR 4000.0;
		}
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 12000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4000.0;
			LEVEL 1 FOR 4000.0;
		}
		LEVEL 0 FOR 3840.0;
		LEVEL 1 FOR 8000.0;
		LEVEL 0 FOR 460.0;
	}
}

TRANSITION_LIST("segments3[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 8020.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 8000.0;
				LEVEL 1 FOR 4000.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 12000.0;
				NODE
				{
					REPEAT = 2;
					LEVEL 1 FOR 4000.0;
					LEVEL 0 FOR 8000.0;
				}
				LEVEL 1 FOR 4000.0;
			}
			LEVEL 0 FOR 12000.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 4000.0;
				LEVEL 0 FOR 8000.0;
			}
			LEVEL 1 FOR 4000.0;
			LEVEL 0 FOR 11840.0;
			LEVEL 1 FOR 8000.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 4000.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 12000.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 4000.0;
				LEVEL 0 FOR 8000.0;
			}
			LEVEL 1 FOR 4000.0;
		}
		LEVEL 0 FOR 12000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4000.0;
			LEVEL 0 FOR 8000.0;
		}
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 11840.0;
		LEVEL 1 FOR 8000.0;
		LEVEL 0 FOR 460.0;
	}
}

TRANSITION_LIST("segments3[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4020.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4000.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 4000.0;
				LEVEL 0 FOR 36000.0;
			}
			LEVEL 1 FOR 4000.0;
			LEVEL 0 FOR 31840.0;
			LEVEL 1 FOR 4000.0;
		}
		LEVEL 0 FOR 4000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 4000.0;
			LEVEL 0 FOR 36000.0;
		}
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 31840.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 460.0;
	}
}

TRANSITION_LIST("segments3[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4020.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 16000.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 8000.0;
				LEVEL 0 FOR 32000.0;
			}
			LEVEL 1 FOR 8000.0;
			LEVEL 0 FOR 15840.0;
			LEVEL 1 FOR 4000.0;
		}
		LEVEL 0 FOR 16000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 8000.0;
			LEVEL 0 FOR 32000.0;
		}
		LEVEL 1 FOR 8000.0;
		LEVEL 0 FOR 15840.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 4460.0;
	}
}

TRANSITION_LIST("segments3[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 8020.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 8000.0;
				LEVEL 1 FOR 4000.0;
				LEVEL 0 FOR 24000.0;
				LEVEL 1 FOR 4000.0;
			}
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 4000.0;
			LEVEL 0 FOR 23840.0;
			LEVEL 1 FOR 8000.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 4000.0;
			LEVEL 0 FOR 24000.0;
			LEVEL 1 FOR 4000.0;
		}
		LEVEL 0 FOR 8000.0;
		LEVEL 1 FOR 4000.0;
		LEVEL 0 FOR 23840.0;
		LEVEL 1 FOR 8000.0;
		LEVEL 0 FOR 460.0;
	}
}

TRANSITION_LIST("segments4[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80020.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 83840.0;
			LEVEL 1 FOR 80000.0;
		}
		LEVEL 0 FOR 83840.0;
		LEVEL 1 FOR 8460.0;
	}
}

TRANSITION_LIST("segments4[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 160020.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3840.0;
			LEVEL 1 FOR 160000.0;
		}
		LEVEL 0 FOR 3840.0;
		LEVEL 1 FOR 8460.0;
	}
}

TRANSITION_LIST("segments4[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80020.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40000.0;
			LEVEL 1 FOR 123840.0;
		}
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 52300.0;
	}
}

TRANSITION_LIST("segments4[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80020.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80000.0;
			LEVEL 1 FOR 83840.0;
		}
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 12300.0;
	}
}

TRANSITION_LIST("segments4[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40020.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40000.0;
			LEVEL 1 FOR 40000.0;
			LEVEL 0 FOR 43840.0;
			LEVEL 1 FOR 40000.0;
		}
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 43840.0;
		LEVEL 1 FOR 8460.0;
	}
}

TRANSITION_LIST("segments4[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40020.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 123840.0;
			LEVEL 1 FOR 40000.0;
		}
		LEVEL 0 FOR 123840.0;
		LEVEL 1 FOR 8460.0;
	}
}

TRANSITION_LIST("segments4[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80020.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 80000.0;
			LEVEL 1 FOR 83840.0;
		}
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 12300.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "bin";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13;
}

DISPLAY_LINE
{
	CHANNEL = "bin[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "bin[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "bin[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "bin[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "bin[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "bin[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "bin[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "bin[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "bin[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "bin[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "bin[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "bin[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "segments1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16, 17, 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "segments1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "segments1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "segments1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "segments1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "segments1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "segments1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "segments1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "segments2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
	CHILDREN = 23, 24, 25, 26, 27, 28, 29;
}

DISPLAY_LINE
{
	CHANNEL = "segments2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "segments2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "segments2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "segments2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "segments2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "segments2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "segments2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "segments3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
	CHILDREN = 31, 32, 33, 34, 35, 36, 37;
}

DISPLAY_LINE
{
	CHANNEL = "segments3[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "segments3[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "segments3[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "segments3[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "segments3[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "segments3[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "segments3[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "segments4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
	CHILDREN = 39, 40, 41, 42, 43, 44, 45;
}

DISPLAY_LINE
{
	CHANNEL = "segments4[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "segments4[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "segments4[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "segments4[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "segments4[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "segments4[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "segments4[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 38;
}

TIME_BAR
{
	TIME = 10000;
	MASTER = TRUE;
}
;
