|g31_test_bed
reset => g31_basic_timer:timer.reset
reset => g31_time_counter:counter1.reset
reset => g31_time_counter:counter2.reset
clock => g31_basic_timer:timer.clock
clock => g31_time_counter:counter1.clock
clock => g31_time_counter:counter2.clock
enable => g31_basic_timer:timer.enable
eOneSeg[0] <= g31_time_counter:counter1.oneSeg[0]
eOneSeg[1] <= g31_time_counter:counter1.oneSeg[1]
eOneSeg[2] <= g31_time_counter:counter1.oneSeg[2]
eOneSeg[3] <= g31_time_counter:counter1.oneSeg[3]
eOneSeg[4] <= g31_time_counter:counter1.oneSeg[4]
eOneSeg[5] <= g31_time_counter:counter1.oneSeg[5]
eOneSeg[6] <= g31_time_counter:counter1.oneSeg[6]
eTenSeg[0] <= g31_time_counter:counter1.tenSeg[0]
eTenSeg[1] <= g31_time_counter:counter1.tenSeg[1]
eTenSeg[2] <= g31_time_counter:counter1.tenSeg[2]
eTenSeg[3] <= g31_time_counter:counter1.tenSeg[3]
eTenSeg[4] <= g31_time_counter:counter1.tenSeg[4]
eTenSeg[5] <= g31_time_counter:counter1.tenSeg[5]
eTenSeg[6] <= g31_time_counter:counter1.tenSeg[6]
mOneSeg[0] <= g31_time_counter:counter2.oneSeg[0]
mOneSeg[1] <= g31_time_counter:counter2.oneSeg[1]
mOneSeg[2] <= g31_time_counter:counter2.oneSeg[2]
mOneSeg[3] <= g31_time_counter:counter2.oneSeg[3]
mOneSeg[4] <= g31_time_counter:counter2.oneSeg[4]
mOneSeg[5] <= g31_time_counter:counter2.oneSeg[5]
mOneSeg[6] <= g31_time_counter:counter2.oneSeg[6]
mTenSeg[0] <= g31_time_counter:counter2.tenSeg[0]
mTenSeg[1] <= g31_time_counter:counter2.tenSeg[1]
mTenSeg[2] <= g31_time_counter:counter2.tenSeg[2]
mTenSeg[3] <= g31_time_counter:counter2.tenSeg[3]
mTenSeg[4] <= g31_time_counter:counter2.tenSeg[4]
mTenSeg[5] <= g31_time_counter:counter2.tenSeg[5]
mTenSeg[6] <= g31_time_counter:counter2.tenSeg[6]


|g31_test_bed|g31_basic_timer:timer
reset => comb.IN1
reset => comb.IN1
clock => LPM_COUNTER:counter.CLOCK
clock => LPM_COUNTER:counter2.CLOCK
enable => LPM_COUNTER:counter.CNT_EN
enable => LPM_COUNTER:counter2.CNT_EN
EPULSE <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
MPULSE <= Equal1.DB_MAX_OUTPUT_PORT_TYPE


|g31_test_bed|g31_basic_timer:timer|LPM_CONSTANT:const
result[0] <= <VCC>
result[1] <= <VCC>
result[2] <= <VCC>
result[3] <= <VCC>
result[4] <= <VCC>
result[5] <= <VCC>
result[6] <= <VCC>
result[7] <= <GND>
result[8] <= <GND>
result[9] <= <GND>
result[10] <= <GND>
result[11] <= <GND>
result[12] <= <VCC>
result[13] <= <VCC>
result[14] <= <VCC>
result[15] <= <VCC>
result[16] <= <GND>
result[17] <= <VCC>
result[18] <= <GND>
result[19] <= <VCC>
result[20] <= <VCC>
result[21] <= <VCC>
result[22] <= <VCC>
result[23] <= <VCC>
result[24] <= <GND>
result[25] <= <VCC>


|g31_test_bed|g31_basic_timer:timer|LPM_COUNTER:counter
clock => cntr_cfl:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_cfl:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => cntr_cfl:auto_generated.sload
data[0] => cntr_cfl:auto_generated.data[0]
data[1] => cntr_cfl:auto_generated.data[1]
data[2] => cntr_cfl:auto_generated.data[2]
data[3] => cntr_cfl:auto_generated.data[3]
data[4] => cntr_cfl:auto_generated.data[4]
data[5] => cntr_cfl:auto_generated.data[5]
data[6] => cntr_cfl:auto_generated.data[6]
data[7] => cntr_cfl:auto_generated.data[7]
data[8] => cntr_cfl:auto_generated.data[8]
data[9] => cntr_cfl:auto_generated.data[9]
data[10] => cntr_cfl:auto_generated.data[10]
data[11] => cntr_cfl:auto_generated.data[11]
data[12] => cntr_cfl:auto_generated.data[12]
data[13] => cntr_cfl:auto_generated.data[13]
data[14] => cntr_cfl:auto_generated.data[14]
data[15] => cntr_cfl:auto_generated.data[15]
data[16] => cntr_cfl:auto_generated.data[16]
data[17] => cntr_cfl:auto_generated.data[17]
data[18] => cntr_cfl:auto_generated.data[18]
data[19] => cntr_cfl:auto_generated.data[19]
data[20] => cntr_cfl:auto_generated.data[20]
data[21] => cntr_cfl:auto_generated.data[21]
data[22] => cntr_cfl:auto_generated.data[22]
data[23] => cntr_cfl:auto_generated.data[23]
data[24] => cntr_cfl:auto_generated.data[24]
data[25] => cntr_cfl:auto_generated.data[25]
cin => ~NO_FANOUT~
q[0] <= cntr_cfl:auto_generated.q[0]
q[1] <= cntr_cfl:auto_generated.q[1]
q[2] <= cntr_cfl:auto_generated.q[2]
q[3] <= cntr_cfl:auto_generated.q[3]
q[4] <= cntr_cfl:auto_generated.q[4]
q[5] <= cntr_cfl:auto_generated.q[5]
q[6] <= cntr_cfl:auto_generated.q[6]
q[7] <= cntr_cfl:auto_generated.q[7]
q[8] <= cntr_cfl:auto_generated.q[8]
q[9] <= cntr_cfl:auto_generated.q[9]
q[10] <= cntr_cfl:auto_generated.q[10]
q[11] <= cntr_cfl:auto_generated.q[11]
q[12] <= cntr_cfl:auto_generated.q[12]
q[13] <= cntr_cfl:auto_generated.q[13]
q[14] <= cntr_cfl:auto_generated.q[14]
q[15] <= cntr_cfl:auto_generated.q[15]
q[16] <= cntr_cfl:auto_generated.q[16]
q[17] <= cntr_cfl:auto_generated.q[17]
q[18] <= cntr_cfl:auto_generated.q[18]
q[19] <= cntr_cfl:auto_generated.q[19]
q[20] <= cntr_cfl:auto_generated.q[20]
q[21] <= cntr_cfl:auto_generated.q[21]
q[22] <= cntr_cfl:auto_generated.q[22]
q[23] <= cntr_cfl:auto_generated.q[23]
q[24] <= cntr_cfl:auto_generated.q[24]
q[25] <= cntr_cfl:auto_generated.q[25]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|g31_test_bed|g31_basic_timer:timer|LPM_COUNTER:counter|cntr_cfl:auto_generated
clock => counter_reg_bit1a[25].CLK
clock => counter_reg_bit1a[24].CLK
clock => counter_reg_bit1a[23].CLK
clock => counter_reg_bit1a[22].CLK
clock => counter_reg_bit1a[21].CLK
clock => counter_reg_bit1a[20].CLK
clock => counter_reg_bit1a[19].CLK
clock => counter_reg_bit1a[18].CLK
clock => counter_reg_bit1a[17].CLK
clock => counter_reg_bit1a[16].CLK
clock => counter_reg_bit1a[15].CLK
clock => counter_reg_bit1a[14].CLK
clock => counter_reg_bit1a[13].CLK
clock => counter_reg_bit1a[12].CLK
clock => counter_reg_bit1a[11].CLK
clock => counter_reg_bit1a[10].CLK
clock => counter_reg_bit1a[9].CLK
clock => counter_reg_bit1a[8].CLK
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN1
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
data[3] => _.IN1
data[4] => _.IN1
data[5] => _.IN1
data[6] => _.IN1
data[7] => _.IN1
data[8] => _.IN1
data[9] => _.IN1
data[10] => _.IN1
data[11] => _.IN1
data[12] => _.IN1
data[13] => _.IN1
data[14] => _.IN1
data[15] => _.IN1
data[16] => _.IN1
data[17] => _.IN1
data[18] => _.IN1
data[19] => _.IN1
data[20] => _.IN1
data[21] => _.IN1
data[22] => _.IN1
data[23] => _.IN1
data[24] => _.IN1
data[25] => _.IN1
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
q[8] <= counter_reg_bit1a[8].REGOUT
q[9] <= counter_reg_bit1a[9].REGOUT
q[10] <= counter_reg_bit1a[10].REGOUT
q[11] <= counter_reg_bit1a[11].REGOUT
q[12] <= counter_reg_bit1a[12].REGOUT
q[13] <= counter_reg_bit1a[13].REGOUT
q[14] <= counter_reg_bit1a[14].REGOUT
q[15] <= counter_reg_bit1a[15].REGOUT
q[16] <= counter_reg_bit1a[16].REGOUT
q[17] <= counter_reg_bit1a[17].REGOUT
q[18] <= counter_reg_bit1a[18].REGOUT
q[19] <= counter_reg_bit1a[19].REGOUT
q[20] <= counter_reg_bit1a[20].REGOUT
q[21] <= counter_reg_bit1a[21].REGOUT
q[22] <= counter_reg_bit1a[22].REGOUT
q[23] <= counter_reg_bit1a[23].REGOUT
q[24] <= counter_reg_bit1a[24].REGOUT
q[25] <= counter_reg_bit1a[25].REGOUT
sload => _.IN1
sload => counter_reg_bit1a[25].IN1


|g31_test_bed|g31_basic_timer:timer|LPM_CONSTANT:const2
result[0] <= <GND>
result[1] <= <VCC>
result[2] <= <GND>
result[3] <= <GND>
result[4] <= <GND>
result[5] <= <VCC>
result[6] <= <VCC>
result[7] <= <VCC>
result[8] <= <VCC>
result[9] <= <GND>
result[10] <= <GND>
result[11] <= <VCC>
result[12] <= <GND>
result[13] <= <VCC>
result[14] <= <VCC>
result[15] <= <VCC>
result[16] <= <VCC>
result[17] <= <VCC>
result[18] <= <VCC>
result[19] <= <VCC>
result[20] <= <GND>
result[21] <= <GND>
result[22] <= <GND>
result[23] <= <GND>
result[24] <= <VCC>
result[25] <= <VCC>


|g31_test_bed|g31_basic_timer:timer|LPM_COUNTER:counter2
clock => cntr_cfl:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_cfl:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => cntr_cfl:auto_generated.sload
data[0] => cntr_cfl:auto_generated.data[0]
data[1] => cntr_cfl:auto_generated.data[1]
data[2] => cntr_cfl:auto_generated.data[2]
data[3] => cntr_cfl:auto_generated.data[3]
data[4] => cntr_cfl:auto_generated.data[4]
data[5] => cntr_cfl:auto_generated.data[5]
data[6] => cntr_cfl:auto_generated.data[6]
data[7] => cntr_cfl:auto_generated.data[7]
data[8] => cntr_cfl:auto_generated.data[8]
data[9] => cntr_cfl:auto_generated.data[9]
data[10] => cntr_cfl:auto_generated.data[10]
data[11] => cntr_cfl:auto_generated.data[11]
data[12] => cntr_cfl:auto_generated.data[12]
data[13] => cntr_cfl:auto_generated.data[13]
data[14] => cntr_cfl:auto_generated.data[14]
data[15] => cntr_cfl:auto_generated.data[15]
data[16] => cntr_cfl:auto_generated.data[16]
data[17] => cntr_cfl:auto_generated.data[17]
data[18] => cntr_cfl:auto_generated.data[18]
data[19] => cntr_cfl:auto_generated.data[19]
data[20] => cntr_cfl:auto_generated.data[20]
data[21] => cntr_cfl:auto_generated.data[21]
data[22] => cntr_cfl:auto_generated.data[22]
data[23] => cntr_cfl:auto_generated.data[23]
data[24] => cntr_cfl:auto_generated.data[24]
data[25] => cntr_cfl:auto_generated.data[25]
cin => ~NO_FANOUT~
q[0] <= cntr_cfl:auto_generated.q[0]
q[1] <= cntr_cfl:auto_generated.q[1]
q[2] <= cntr_cfl:auto_generated.q[2]
q[3] <= cntr_cfl:auto_generated.q[3]
q[4] <= cntr_cfl:auto_generated.q[4]
q[5] <= cntr_cfl:auto_generated.q[5]
q[6] <= cntr_cfl:auto_generated.q[6]
q[7] <= cntr_cfl:auto_generated.q[7]
q[8] <= cntr_cfl:auto_generated.q[8]
q[9] <= cntr_cfl:auto_generated.q[9]
q[10] <= cntr_cfl:auto_generated.q[10]
q[11] <= cntr_cfl:auto_generated.q[11]
q[12] <= cntr_cfl:auto_generated.q[12]
q[13] <= cntr_cfl:auto_generated.q[13]
q[14] <= cntr_cfl:auto_generated.q[14]
q[15] <= cntr_cfl:auto_generated.q[15]
q[16] <= cntr_cfl:auto_generated.q[16]
q[17] <= cntr_cfl:auto_generated.q[17]
q[18] <= cntr_cfl:auto_generated.q[18]
q[19] <= cntr_cfl:auto_generated.q[19]
q[20] <= cntr_cfl:auto_generated.q[20]
q[21] <= cntr_cfl:auto_generated.q[21]
q[22] <= cntr_cfl:auto_generated.q[22]
q[23] <= cntr_cfl:auto_generated.q[23]
q[24] <= cntr_cfl:auto_generated.q[24]
q[25] <= cntr_cfl:auto_generated.q[25]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|g31_test_bed|g31_basic_timer:timer|LPM_COUNTER:counter2|cntr_cfl:auto_generated
clock => counter_reg_bit1a[25].CLK
clock => counter_reg_bit1a[24].CLK
clock => counter_reg_bit1a[23].CLK
clock => counter_reg_bit1a[22].CLK
clock => counter_reg_bit1a[21].CLK
clock => counter_reg_bit1a[20].CLK
clock => counter_reg_bit1a[19].CLK
clock => counter_reg_bit1a[18].CLK
clock => counter_reg_bit1a[17].CLK
clock => counter_reg_bit1a[16].CLK
clock => counter_reg_bit1a[15].CLK
clock => counter_reg_bit1a[14].CLK
clock => counter_reg_bit1a[13].CLK
clock => counter_reg_bit1a[12].CLK
clock => counter_reg_bit1a[11].CLK
clock => counter_reg_bit1a[10].CLK
clock => counter_reg_bit1a[9].CLK
clock => counter_reg_bit1a[8].CLK
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN1
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
data[3] => _.IN1
data[4] => _.IN1
data[5] => _.IN1
data[6] => _.IN1
data[7] => _.IN1
data[8] => _.IN1
data[9] => _.IN1
data[10] => _.IN1
data[11] => _.IN1
data[12] => _.IN1
data[13] => _.IN1
data[14] => _.IN1
data[15] => _.IN1
data[16] => _.IN1
data[17] => _.IN1
data[18] => _.IN1
data[19] => _.IN1
data[20] => _.IN1
data[21] => _.IN1
data[22] => _.IN1
data[23] => _.IN1
data[24] => _.IN1
data[25] => _.IN1
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
q[8] <= counter_reg_bit1a[8].REGOUT
q[9] <= counter_reg_bit1a[9].REGOUT
q[10] <= counter_reg_bit1a[10].REGOUT
q[11] <= counter_reg_bit1a[11].REGOUT
q[12] <= counter_reg_bit1a[12].REGOUT
q[13] <= counter_reg_bit1a[13].REGOUT
q[14] <= counter_reg_bit1a[14].REGOUT
q[15] <= counter_reg_bit1a[15].REGOUT
q[16] <= counter_reg_bit1a[16].REGOUT
q[17] <= counter_reg_bit1a[17].REGOUT
q[18] <= counter_reg_bit1a[18].REGOUT
q[19] <= counter_reg_bit1a[19].REGOUT
q[20] <= counter_reg_bit1a[20].REGOUT
q[21] <= counter_reg_bit1a[21].REGOUT
q[22] <= counter_reg_bit1a[22].REGOUT
q[23] <= counter_reg_bit1a[23].REGOUT
q[24] <= counter_reg_bit1a[24].REGOUT
q[25] <= counter_reg_bit1a[25].REGOUT
sload => _.IN1
sload => counter_reg_bit1a[25].IN1


|g31_test_bed|g31_time_counter:counter1
reset => comb.IN1
reset => comb.IN1
clock => LPM_COUNTER:seecCounter.CLOCK
clock => LPM_COUNTER:tenCounter.CLOCK
pulseIn => LPM_COUNTER:seecCounter.CNT_EN
oneSeg[0] <= g31_seven_segment_decoder:sevenSeg1.segments[0]
oneSeg[1] <= g31_seven_segment_decoder:sevenSeg1.segments[1]
oneSeg[2] <= g31_seven_segment_decoder:sevenSeg1.segments[2]
oneSeg[3] <= g31_seven_segment_decoder:sevenSeg1.segments[3]
oneSeg[4] <= g31_seven_segment_decoder:sevenSeg1.segments[4]
oneSeg[5] <= g31_seven_segment_decoder:sevenSeg1.segments[5]
oneSeg[6] <= g31_seven_segment_decoder:sevenSeg1.segments[6]
tenSeg[0] <= g31_seven_segment_decoder:sevenSeg2.segments[0]
tenSeg[1] <= g31_seven_segment_decoder:sevenSeg2.segments[1]
tenSeg[2] <= g31_seven_segment_decoder:sevenSeg2.segments[2]
tenSeg[3] <= g31_seven_segment_decoder:sevenSeg2.segments[3]
tenSeg[4] <= g31_seven_segment_decoder:sevenSeg2.segments[4]
tenSeg[5] <= g31_seven_segment_decoder:sevenSeg2.segments[5]
tenSeg[6] <= g31_seven_segment_decoder:sevenSeg2.segments[6]


|g31_test_bed|g31_time_counter:counter1|LPM_COUNTER:seecCounter
clock => cntr_bpk:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_bpk:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => cntr_bpk:auto_generated.sload
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_bpk:auto_generated.q[0]
q[1] <= cntr_bpk:auto_generated.q[1]
q[2] <= cntr_bpk:auto_generated.q[2]
q[3] <= cntr_bpk:auto_generated.q[3]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|g31_test_bed|g31_time_counter:counter1|LPM_COUNTER:seecCounter|cntr_bpk:auto_generated
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN1
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
sload => _.IN1
sload => counter_reg_bit1a[3].IN1


|g31_test_bed|g31_time_counter:counter1|g31_seven_segment_decoder:sevenSeg1
code[0] => Mux0.IN35
code[0] => Mux1.IN19
code[0] => Mux2.IN35
code[0] => Mux3.IN35
code[0] => Mux4.IN35
code[0] => Mux5.IN35
code[0] => Mux6.IN35
code[0] => Mux7.IN35
code[1] => Mux0.IN34
code[1] => Mux1.IN18
code[1] => Mux2.IN34
code[1] => Mux3.IN34
code[1] => Mux4.IN34
code[1] => Mux5.IN34
code[1] => Mux6.IN34
code[1] => Mux7.IN34
code[2] => Mux0.IN33
code[2] => Mux1.IN17
code[2] => Mux2.IN33
code[2] => Mux3.IN33
code[2] => Mux4.IN33
code[2] => Mux5.IN33
code[2] => Mux6.IN33
code[2] => Mux7.IN33
code[3] => Mux0.IN32
code[3] => Mux1.IN16
code[3] => Mux2.IN32
code[3] => Mux3.IN32
code[3] => Mux4.IN32
code[3] => Mux5.IN32
code[3] => Mux6.IN32
code[3] => Mux7.IN32
RippleBlank_In => Mux0.IN36
RippleBlank_In => Mux2.IN36
RippleBlank_In => Mux3.IN36
RippleBlank_In => Mux4.IN36
RippleBlank_In => Mux5.IN36
RippleBlank_In => Mux6.IN36
RippleBlank_In => Mux7.IN36
RippleBlank_Out <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
segments[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE


|g31_test_bed|g31_time_counter:counter1|LPM_COUNTER:tenCounter
clock => cntr_bpk:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_bpk:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => cntr_bpk:auto_generated.sload
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_bpk:auto_generated.q[0]
q[1] <= cntr_bpk:auto_generated.q[1]
q[2] <= cntr_bpk:auto_generated.q[2]
q[3] <= cntr_bpk:auto_generated.q[3]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|g31_test_bed|g31_time_counter:counter1|LPM_COUNTER:tenCounter|cntr_bpk:auto_generated
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN1
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
sload => _.IN1
sload => counter_reg_bit1a[3].IN1


|g31_test_bed|g31_time_counter:counter1|g31_seven_segment_decoder:sevenSeg2
code[0] => Mux0.IN35
code[0] => Mux1.IN19
code[0] => Mux2.IN35
code[0] => Mux3.IN35
code[0] => Mux4.IN35
code[0] => Mux5.IN35
code[0] => Mux6.IN35
code[0] => Mux7.IN35
code[1] => Mux0.IN34
code[1] => Mux1.IN18
code[1] => Mux2.IN34
code[1] => Mux3.IN34
code[1] => Mux4.IN34
code[1] => Mux5.IN34
code[1] => Mux6.IN34
code[1] => Mux7.IN34
code[2] => Mux0.IN33
code[2] => Mux1.IN17
code[2] => Mux2.IN33
code[2] => Mux3.IN33
code[2] => Mux4.IN33
code[2] => Mux5.IN33
code[2] => Mux6.IN33
code[2] => Mux7.IN33
code[3] => Mux0.IN32
code[3] => Mux1.IN16
code[3] => Mux2.IN32
code[3] => Mux3.IN32
code[3] => Mux4.IN32
code[3] => Mux5.IN32
code[3] => Mux6.IN32
code[3] => Mux7.IN32
RippleBlank_In => Mux0.IN36
RippleBlank_In => Mux2.IN36
RippleBlank_In => Mux3.IN36
RippleBlank_In => Mux4.IN36
RippleBlank_In => Mux5.IN36
RippleBlank_In => Mux6.IN36
RippleBlank_In => Mux7.IN36
RippleBlank_Out <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
segments[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE


|g31_test_bed|g31_time_counter:counter2
reset => comb.IN1
reset => comb.IN1
clock => LPM_COUNTER:seecCounter.CLOCK
clock => LPM_COUNTER:tenCounter.CLOCK
pulseIn => LPM_COUNTER:seecCounter.CNT_EN
oneSeg[0] <= g31_seven_segment_decoder:sevenSeg1.segments[0]
oneSeg[1] <= g31_seven_segment_decoder:sevenSeg1.segments[1]
oneSeg[2] <= g31_seven_segment_decoder:sevenSeg1.segments[2]
oneSeg[3] <= g31_seven_segment_decoder:sevenSeg1.segments[3]
oneSeg[4] <= g31_seven_segment_decoder:sevenSeg1.segments[4]
oneSeg[5] <= g31_seven_segment_decoder:sevenSeg1.segments[5]
oneSeg[6] <= g31_seven_segment_decoder:sevenSeg1.segments[6]
tenSeg[0] <= g31_seven_segment_decoder:sevenSeg2.segments[0]
tenSeg[1] <= g31_seven_segment_decoder:sevenSeg2.segments[1]
tenSeg[2] <= g31_seven_segment_decoder:sevenSeg2.segments[2]
tenSeg[3] <= g31_seven_segment_decoder:sevenSeg2.segments[3]
tenSeg[4] <= g31_seven_segment_decoder:sevenSeg2.segments[4]
tenSeg[5] <= g31_seven_segment_decoder:sevenSeg2.segments[5]
tenSeg[6] <= g31_seven_segment_decoder:sevenSeg2.segments[6]


|g31_test_bed|g31_time_counter:counter2|LPM_COUNTER:seecCounter
clock => cntr_bpk:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_bpk:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => cntr_bpk:auto_generated.sload
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_bpk:auto_generated.q[0]
q[1] <= cntr_bpk:auto_generated.q[1]
q[2] <= cntr_bpk:auto_generated.q[2]
q[3] <= cntr_bpk:auto_generated.q[3]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|g31_test_bed|g31_time_counter:counter2|LPM_COUNTER:seecCounter|cntr_bpk:auto_generated
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN1
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
sload => _.IN1
sload => counter_reg_bit1a[3].IN1


|g31_test_bed|g31_time_counter:counter2|g31_seven_segment_decoder:sevenSeg1
code[0] => Mux0.IN35
code[0] => Mux1.IN19
code[0] => Mux2.IN35
code[0] => Mux3.IN35
code[0] => Mux4.IN35
code[0] => Mux5.IN35
code[0] => Mux6.IN35
code[0] => Mux7.IN35
code[1] => Mux0.IN34
code[1] => Mux1.IN18
code[1] => Mux2.IN34
code[1] => Mux3.IN34
code[1] => Mux4.IN34
code[1] => Mux5.IN34
code[1] => Mux6.IN34
code[1] => Mux7.IN34
code[2] => Mux0.IN33
code[2] => Mux1.IN17
code[2] => Mux2.IN33
code[2] => Mux3.IN33
code[2] => Mux4.IN33
code[2] => Mux5.IN33
code[2] => Mux6.IN33
code[2] => Mux7.IN33
code[3] => Mux0.IN32
code[3] => Mux1.IN16
code[3] => Mux2.IN32
code[3] => Mux3.IN32
code[3] => Mux4.IN32
code[3] => Mux5.IN32
code[3] => Mux6.IN32
code[3] => Mux7.IN32
RippleBlank_In => Mux0.IN36
RippleBlank_In => Mux2.IN36
RippleBlank_In => Mux3.IN36
RippleBlank_In => Mux4.IN36
RippleBlank_In => Mux5.IN36
RippleBlank_In => Mux6.IN36
RippleBlank_In => Mux7.IN36
RippleBlank_Out <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
segments[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE


|g31_test_bed|g31_time_counter:counter2|LPM_COUNTER:tenCounter
clock => cntr_bpk:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_bpk:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => cntr_bpk:auto_generated.sload
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_bpk:auto_generated.q[0]
q[1] <= cntr_bpk:auto_generated.q[1]
q[2] <= cntr_bpk:auto_generated.q[2]
q[3] <= cntr_bpk:auto_generated.q[3]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|g31_test_bed|g31_time_counter:counter2|LPM_COUNTER:tenCounter|cntr_bpk:auto_generated
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN1
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
sload => _.IN1
sload => counter_reg_bit1a[3].IN1


|g31_test_bed|g31_time_counter:counter2|g31_seven_segment_decoder:sevenSeg2
code[0] => Mux0.IN35
code[0] => Mux1.IN19
code[0] => Mux2.IN35
code[0] => Mux3.IN35
code[0] => Mux4.IN35
code[0] => Mux5.IN35
code[0] => Mux6.IN35
code[0] => Mux7.IN35
code[1] => Mux0.IN34
code[1] => Mux1.IN18
code[1] => Mux2.IN34
code[1] => Mux3.IN34
code[1] => Mux4.IN34
code[1] => Mux5.IN34
code[1] => Mux6.IN34
code[1] => Mux7.IN34
code[2] => Mux0.IN33
code[2] => Mux1.IN17
code[2] => Mux2.IN33
code[2] => Mux3.IN33
code[2] => Mux4.IN33
code[2] => Mux5.IN33
code[2] => Mux6.IN33
code[2] => Mux7.IN33
code[3] => Mux0.IN32
code[3] => Mux1.IN16
code[3] => Mux2.IN32
code[3] => Mux3.IN32
code[3] => Mux4.IN32
code[3] => Mux5.IN32
code[3] => Mux6.IN32
code[3] => Mux7.IN32
RippleBlank_In => Mux0.IN36
RippleBlank_In => Mux2.IN36
RippleBlank_In => Mux3.IN36
RippleBlank_In => Mux4.IN36
RippleBlank_In => Mux5.IN36
RippleBlank_In => Mux6.IN36
RippleBlank_In => Mux7.IN36
RippleBlank_Out <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
segments[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE


